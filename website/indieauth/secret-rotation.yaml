AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: modified version of SecretsManagerRotationTemplate from the Serverless Application Repository
Parameters:
  endpoint:
    Type: String
    Description: The Secrets Manager endpoint to hit
  functionName:
    Type: String
    Description: The name of the lambda function
  invokingServicePrincipal:
    Type: String
    Description: The Service Principal of the invoking service
    Default: secretsmanager.amazonaws.com
  vpcSubnetIds:
    Type: CommaDelimitedList
    Description: List of VPC subnet IDs
    Default: ''
  vpcSecurityGroupIds:
    Type: CommaDelimitedList
    Description: List of VPC security grouop IDs
    Default: ''
  masterSecretArn:
    Type: String
    Description: The master secret's ARN that is used for rotation
    Default: ''
  kmsKeyArn:
    Type: String
    Description: The kms key used to encrypt the secret being rotated
    Default: ''
  masterSecretKmsKeyArn:
    Type: String
    Description: The kms key used to encrypt the master secret
    Default: ''
  excludeCharacters:
    Type: String
    Description: A string that includes characters that should not be included in the generated password
    Default: /@"'\
Conditions:
  AddVpcConfig:
    Fn::And:
    - Fn::Not:
      - Fn::Equals:
        - ''
        - Fn::Join:
          - ''
          - Ref: vpcSubnetIds
    - Fn::Not:
      - Fn::Equals:
        - ''
        - Fn::Join:
          - ''
          - Ref: vpcSecurityGroupIds
  MasterSecretArnExists:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: masterSecretArn
  KmsKeyArnExists:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: kmsKeyArn
  MasterSecretKmsKeyArnExists:
    Fn::And:
    - Fn::Not:
      - Fn::Equals:
        - ''
        - Ref: masterSecretKmsKeyArn
    - Fn::Not:
      - Fn::Equals:
        - Ref: kmsKeyArn
        - Ref: masterSecretKmsKeyArn
Resources:
  SecretsManagerRotationTemplate:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Ref: functionName
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: secret_rotation_function/
      Timeout: 30
      Policies:
      - VPCAccessPolicy: {}
      - AWSSecretsManagerRotationPolicy:
          FunctionName:
            Ref: functionName
      - Fn::If:
        - MasterSecretArnExists
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn:
              Ref: masterSecretArn
        - Ref: AWS::NoValue
      - Fn::If:
        - KmsKeyArnExists
        - Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - kms:Decrypt
            - kms:DescribeKey
            - kms:GenerateDataKey
            Resource:
              Ref: kmsKeyArn
        - Ref: AWS::NoValue
      - Fn::If:
        - MasterSecretKmsKeyArnExists
        - Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - kms:Decrypt
            - kms:DescribeKey
            - kms:GenerateDataKey
            Resource:
              Ref: masterSecretKmsKeyArn
        - Ref: AWS::NoValue
      Environment:
        Variables:
          SECRETS_MANAGER_ENDPOINT:
            Ref: endpoint
          EXCLUDE_CHARACTERS:
            Ref: excludeCharacters
      VpcConfig:
        Fn::If:
        - AddVpcConfig
        - SubnetIds:
            Ref: vpcSubnetIds
          SecurityGroupIds:
            Ref: vpcSecurityGroupIds
        - Ref: AWS::NoValue
      Tags:
        SecretsManagerLambda: Rotation
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - SecretsManagerRotationTemplate
        - Arn
      Principal:
        Ref: invokingServicePrincipal
Outputs:
  RotationLambdaARN:
    Description: The ARN of the rotation lambda
    Value:
      Fn::GetAtt:
      - SecretsManagerRotationTemplate
      - Arn